<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pj2.shoecream.mapper.AuctionMapper">
	<insert id="insertAuctionItem">
		insert into
			auction_item
		values(
			#{auction_idx}
			, #{mem_idx}
			, #{auction_title}
			, #{auction_info}
			, 'pay'
			, #{lc_code}
			, #{mc_code}
			, now()
			, '0'
			, #{auction_brand}
			, #{auction_size}
			, '1'
			, #{auc_start_price}
			, #{auc_buy_instantly}
			, #{auc_bid_unit}
			, #{auc_regist_date}
			, #{auc_close_date}
			, '대기'
		)
	</insert>
	
	
	<update id="modifyAuctionItem" >
    update auction_item
    set
        mem_idx = #{mem_idx},
        auction_title = #{auction_title},
        auction_info = #{auction_info},
        lc_code = #{lc_code},
        mc_code = #{mc_code},
        auction_brand = #{auction_brand},
        auction_size = #{auction_size},
        auc_start_price = #{auc_start_price},
        auc_buy_instantly = #{auc_buy_instantly},
        auc_bid_unit = #{auc_bid_unit},
        auc_regist_date = #{auc_regist_date},
        auc_close_date = #{auc_close_date}
    where auction_idx = #{auction_idx}
	</update>
	
	<select id="selectAuctionList" resultType="map">
		SELECT
		    ai.auction_idx 
			, image_path
			, image1
			, auction_title
			, auc_start_price
			, auc_close_date
			, auction_readcount
			, bid_price
			, dibs_count
			, auc_state
		FROM
			auction_item ai 
			JOIN product_image pi ON ai.auction_idx = pi.product_idx 
			JOIN (
				SELECT
					ai.auction_idx
					, sum(CASE
						WHEN bl.auction_idx IS NULL THEN 0
						ELSE 1
					END) AS bid_count
                    , max(bl.bid_price) AS bid_price
				FROM
					auction_item ai LEFT JOIN bid_list bl
					ON ai.auction_idx = bl.auction_idx
				GROUP BY
					ai.auction_idx) aibl ON ai.auction_idx = aibl.auction_idx
			JOIN (
				SELECT
					auction_idx
					, sum(CASE
						WHEN di.product_idx IS NULL THEN 0
						ELSE 1
					END) AS dibs_count
				FROM
					auction_item ai LEFT JOIN dibs di
					ON ai.auction_idx = di.product_idx
				GROUP BY
					ai.auction_idx) aidi ON ai.auction_idx = aidi.auction_idx
		WHERE
			auc_state = '진행' OR '마감'
		<if test="!lc_code.equals('')">
		    <choose>
		        <when test="mc_code.equals('')">
		        	and lc_code = #{lc_code }
		        </when>
		        <otherwise>
		            and mc_code = #{mc_code }
		        </otherwise>
		    </choose>
		</if>
		<if test="!orderMethod.equals('')"> 
		    <choose>
		        <when test="orderMethod.equals('newest')">
			    	order by
                   		auction_date DESC         
		        </when>
		        <when test="orderMethod.equals('deadline')">
		        	order by
                    	auc_close_date            
		        </when>
		        <when test="orderMethod.equals('steamed')">
		        	order by
                    	dibs_count DESC, auction_readcount DESC	            
		        </when>
		        <when test="orderMethod.equals('popular')">
		        	order by
		            	bid_count DESC, auction_readcount DESC
		        </when>
		    </choose>
		</if>
        <if test="startRow != null and listLimit != null">
	        limit
	            #{startRow}
	            , #{listLimit}
        </if>
	</select>
	<select id="selectAuction">
	   select
	       *
	   from
	       auction_item ai join product_image pi 
	       on ai.auction_idx = pi.product_idx join large_category lc
	       on ai.lc_code = lc.lc_code join middle_category mc
	       on ai.mc_code = mc.mc_code
	   where
	       auction_idx = #{auctionx_idx}
	</select>
	<select id="selectBidPrice" resultType="String">
		SELECT 
		  COALESCE(MAX(bid_list.bid_price), auction_item.auc_start_price) AS result_price
		FROM 
		  auction_item
		LEFT JOIN 
		  bid_list ON auction_item.auction_idx = bid_list.auction_idx
		WHERE 
		  auction_item.auction_idx = #{auctionx_idx}
	</select>
	<insert id="insertBidList">
		insert into
			bid_list
		values(
			#{auction_idx}
			, #{sId}
			, #{bid_price}
			, now()
			, #{deposit}
			, '입찰'
		)
	</insert>
	<update id="updateItemReadCount">
	   update
	       auction_item
	   set
	       auction_readcount = auction_readcount + 1
	   where
	       auction_idx = #{auction_idx }
	</update>
	<select id="selectAuctionDibs">
	   select
	       *
	   from
	       dibs
	   where
	       product_idx = #{auction_idx }
	       and mem_idx = #{mem_idx }
	</select>
	<insert id="insertDibs">
	   insert into
	       dibs
	   values(
	       null
	       , #{mem_idx }
	       , #{auction_idx }
	       , 'Y'
	   )
	</insert>
	<delete id="deleteDibs">
	   delete from
	       dibs
	   where
	       mem_idx = #{mem_idx }
	       and product_idx = #{auction_idx }
	</delete>
	<select id="selectDibsCount">
        SELECT 
            count(product_idx) 
        FROM 
            dibs
        WHERE 
            product_idx=${auction_idx }
	</select>
	<select id="selectSellerInfo" resultType="map">
	    select
	    	mem_nickname
	    	, mem_idx
	    	, mem_profileImageUrl
	    from
	    	mem_info
	    where
	    	mem_idx = #{mem_idx }
	</select>
	<update id="updateAuctionState" parameterType="string">
		update
			auction_item
		set
			auc_state = '마감'
		where
			auction_idx = #{auction_idx }
	</update>
	<select id="selectSellerItems">
		select
			*
		from
			auction_item ai join product_image pi
			on ai.auction_idx = pi.product_idx
		where
			mem_idx = #{mem_idx }
	</select>
	<select id="selectMember">
		select
			*
		from
			mem_info
		where
			mem_idx = #{mem_idx }
	</select>
	<select id="selectRelatedAuctionList" resultType="map">
		SELECT
		    ai.auction_idx 
			, image_path
			, image1
			, auction_title
			, auc_start_price
			, auc_close_date
		FROM
			auction_item ai JOIN product_image pi 
			ON ai.auction_idx = pi.product_idx 
		WHERE
			auc_state = '진행'
			and auction_idx != #{auction_idx }
        	and lc_code = #{lc_code }
            and mc_code = #{mc_code }
	        limit
	        	4
	</select>
</mapper>
