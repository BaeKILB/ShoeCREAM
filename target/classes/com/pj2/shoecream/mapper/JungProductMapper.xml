<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pj2.shoecream.mapper.JungProductMapper">

	<select id="selectJungProductChat" resultType="JungProductVO">
		SELECT mem_idx,product_title,product_payment,product_price,product_sell_status,product_location
		FROM jung_product jp 
		WHERE
			product_idx = #{product_idx}
			AND product_selector = 0
			;
	</select>
	
	<select id="selectJungProductList" resultType="JungProductVO">
		SELECT *
		FROM 
			jung_product
		
			WHERE
			product_sell_status != "거래완료"
			<if test='jproduct.lc_code != null'>
				<if test='jproduct.lc_code != 0'>
					AND
					lc_code = #{jproduct.lc_code}
					<if test='jproduct.mc_code != null'>
						<if test='jproduct.mc_code != 0'>
							AND
							mc_code = #{jproduct.mc_code}
						</if>
					</if>
				</if>
			</if>
		
 		ORDER BY 
 		<choose>
 			<when test="orderMethod != null">
		 		<choose>
		<!--  			<when test="steamed"> -->
		<!--  			</when> -->
		 			<when test="orderMethod.equals('view')">
		 				product_readcount desc
		 			</when>
		 			<otherwise>
				 		product_date desc
		 			</otherwise>
		 		</choose>
 			</when>
 			<otherwise>
		 		product_date desc
 			</otherwise>
 		</choose>
		LIMIT #{startCount}, #{setPageListLimit}
			
			;
	</select>

	<select id="selectJungProduct" parameterType="JungProductVO" resultType="JungProductVO">
		SELECT *
		FROM 
			jung_product
		WHERE
			product_idx = #{product_idx}
			;
	</select>
	
	
		<!-- 불러오는 항목들 
	product_idx,mem_idx,product_title,product_info,product_payment
	,lc_code,mc_code
	,product_date,product_readcount,product_brand,product_size
	,product_selector,product_price,product_status,product_sell_status
	,product_location,product_buyer_idx
	,image1,image2,image3,image4,image_path
	,mem_idx,mem_id,mem_name,mem_nickname,mem_status,mem_profileImageUrl
	,product_idx,dibs_count -->
	<select id="selectJungProductExtend" resultType="map">
		SELECT *
		FROM 
			(
				SELECT jp.product_idx, mem_idx, product_title, product_info, product_payment, 
				lc_code, mc_code, product_date, product_readcount, product_brand, 
				product_size, product_selector, product_price, product_status, product_sell_status, 
				product_location, product_buyer_idx, image1, image2, image3, image4, image_path
				FROM
					jung_product jp
					LEFT JOIN
					product_image img 
					ON jp.product_idx = img.product_idx 
				WHERE
					jp.product_idx = #{product_idx}
			) jp1
			LEFT JOIN
			mem_info mi
			ON
			jp1.mem_idx = mi.mem_idx
		;			
	</select>
	
	
	<!-- 불러오는 항목들 
	product_idx,mem_idx,product_title,product_info,product_payment
	,lc_code,mc_code
	,product_date,product_readcount,product_brand,product_size
	,product_selector,product_price,product_status,product_sell_status
	,product_location,product_buyer_idx
	,image1,image2,image3,image4,image_path
	,mem_idx,mem_id,mem_name,mem_nickname,mem_status,mem_profileImageUrl
	,product_idx,dibs_count -->
	<!-- 
		WHERE 문의 jp.product_idx LIKE "%" 는 아래의 조건문이 하나도 없을때
		WHERE 만 덩그러니 있어서 sql 문 에러 뜨는것을 방지하기 위함으로 만듬
	 -->
	<select id="selectJungProductExList" resultType="map">
		SELECT *
		FROM 
			(
				SELECT jp.product_idx, mem_idx, product_title, product_info, product_payment, 
				lc_code, mc_code, product_date, product_readcount, product_brand, 
				product_size, product_selector, product_price, product_status, product_sell_status, 
				product_location, product_buyer_idx, image1, image2, image3, image4, image_path
				FROM
					jung_product jp
					LEFT JOIN
					product_image img 
					ON jp.product_idx = img.product_idx 
				WHERE
				jp.product_idx LIKE "%"
				<choose>
					<when test="isSearchCloseItem != null">					
						<choose>
							<when test='isSearchCloseItem != "Y"'>
								AND
								product_sell_status != "거래완료"
							</when>
						</choose>
					</when>
					<otherwise>
						AND
						product_sell_status != "거래완료"
					</otherwise>
				</choose>
				<if test='jproduct.lc_code != null'>
					<if test='jproduct.lc_code != 0'>
						AND
						lc_code = #{jproduct.lc_code}
						<if test='jproduct.mc_code != null'>
							<if test='jproduct.mc_code != 0'>
								AND
								mc_code = #{jproduct.mc_code}
							</if>
						</if>
					</if>
				</if>
				<if test="keyWord != null">
					AND
					product_title LIKE #{keyWord}
				</if>
			
		 		ORDER BY 
		 		<choose>
		 			<when test="orderMethod != null">
				 		<choose>
				<!--  			<when test="steamed"> -->
				<!--  			</when> -->
				 			<when test="orderMethod.equals('view')">
				 				product_readcount desc
				 			</when>
				 			<otherwise>
						 		product_date desc
				 			</otherwise>
				 		</choose>
		 			</when>
		 			<otherwise>
				 		product_date desc
		 			</otherwise>
		 		</choose>
				LIMIT #{startCount}, #{setPageListLimit}
			) jp1
			LEFT JOIN
			(
			SELECT mem_idx,mem_id,mem_name,mem_nickname
			,mem_status,mem_profileImageUrl
			FROM mem_info
			) mi
			ON
			jp1.mem_idx = mi.mem_idx
			JOIN 
			(
			SELECT
				jp2.product_idx 
				, sum(CASE
					WHEN di.product_idx IS NULL THEN 0
					ELSE 1
				END) AS dibs_count
			FROM
				jung_product jp2 LEFT JOIN dibs di
				ON jp2.product_idx = di.product_idx
			GROUP BY
				jp2.product_idx
				) di
			ON di.product_idx = jp1.product_idx
			GROUP BY
				jp1.product_idx	
			;			
	</select>
	
	<!-- 카테고리에 대한 중고 제품 갯수 구하기 -->
	<select id="selectJungProductCount" parameterType="JungProductVO">
		SELECT count(product_idx)
		FROM 
			jung_product
		
			<if test='lc_code != null'>
				<if test='lc_code != 0'>
				WHERE
					lc_code = #{lc_code}
					<if test='mc_code != null'>
						<if test='mc_code != 0'>
							AND
							mc_code = #{mc_code}
						</if>
					</if>
				</if>
			</if>
			;
	</select>
	
	<!-- 중고 상품들을 기준으로 찜 목록 불러오기 -->
		<!-- 찜 검색 -->
	<select id="selectDibsList" resultType="String">
	    SELECT product_idx
	      FROM dibs
	     WHERE mem_idx = ${buyier_idx}
	     AND favorite_check = "Y"
	     ;
	</select>

	<!-- 찜 갯수 count -->
	<select id="selectDibsCount" >
	    SELECT count(product_idx)
	      FROM dibs
	     WHERE product_idx = #{product_idx}
		
	</select>
	

	<update id="updateJungBuyerIdx">
		UPDATE jung_product
		SET product_buyer_idx = #{product_buyer_idx}
		WHERE product_idx = #{product_idx}
		; 
	</update>
	
	<!-- 중고 상태 업데이트 -->
	<update id="updateSellStatus">
		UPDATE jung_product
		SET product_sell_status = #{product_sell_status}
		WHERE product_idx = #{product_idx}
		; 
	</update>
	
	<!-- 중고 상태 업데이트 -->
	<update id="updateSellStatusNBuyerIdx">
		UPDATE jung_product
		SET product_sell_status = #{product_sell_status}
		, product_buyer_idx = #{product_buyer_idx}
		WHERE product_idx = #{product_idx}
		; 
	</update>

</mapper>