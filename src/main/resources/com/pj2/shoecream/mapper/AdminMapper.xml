<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pj2.shoecream.mapper.AdminMapper">
	<!-- 회원 조회 -->
	<select id="selectMemberInfo" resultType="com.pj2.shoecream.vo.MemberVO">
		SELECT *
			FROM mem_info
				<if test="!searchKeyword.equals('')">
					WHERE 
					<choose>
						<when test="searchType.equals('mem_id')">
							mem_id LIKE CONCAT('%', #{searchKeyword},'%')
						</when>
						<when test="searchType.equals('mem_name')">
							mem_name LIKE CONCAT('%', #{searchKeyword},'%')
						</when>
						<when test="searchType.equals('mem_nickname')">
							mem_nickname LIKE CONCAT('%', #{searchKeyword},'%')
						</when>
						<when test="searchType.equals('mem_rank')">
							mem_rank LIKE CONCAT('%', #{searchKeyword},'%')
						</when>
					</choose>
				</if>
			LIMIT
				#{startRow}
				, #{listLimit}
	</select>
	<select id="selectMemberListCount" resultType="int">
		SELECT COUNT(*)
			FROM mem_info
				<if test="!searchKeyword.equals('')">
					WHERE 
					<choose>
						<when test="searchType.equals('mem_id')">
							mem_id LIKE CONCAT('%', #{searchKeyword},'%')
						</when>
						<when test="searchType.equals('mem_name')">
							mem_name LIKE CONCAT('%', #{searchKeyword},'%')
						</when>
						<when test="searchType.equals('mem_nickname')">
							mem_nickname LIKE CONCAT('%', #{searchKeyword},'%')
						</when>
						<when test="searchType.equals('mem_rank')">
							mem_rank LIKE CONCAT('%', #{searchKeyword},'%')
						</when>
					</choose>
				</if>
	</select>
	<!-- 회원 정보 상세조회 -->
	<select id="getMemberInfo" resultType="com.pj2.shoecream.vo.MemberVO">
		SELECT *
			FROM mem_info
			WHERE mem_idx = #{mem_idx}
	</select>
	<!-- 회원 등업 업데이트 -->
<!-- 	<update id="updateMemberRank"> -->
<!-- 		UPDATE MEMBER -->
<!-- 			SET mem_rank -->
<!-- 	</update> -->

	<!-- 회원 삭제 처리 -->
	<delete id="deleteMember">
		DELETE FROM mem_info
			WHERE mem_idx = #{mem_idx}
	</delete>
	
	<!-- 회원 문의 게시판 조회 -->
	<select id="selectQstBoard" resultType="com.pj2.shoecream.vo.InquiryBoardVO">
		SELECT *
			FROM qst_board
				<if test="!searchType.equals('')">
					WHERE qst_type = #{searchType}
				</if>
				ORDER BY
					qst_board_re_ref DESC
					, qst_board_re_seq ASC
			LIMIT
				#{startRow}
				, #{listLimit}
	</select>
	<select id="getQstListCount" resultType="int">
		SELECT COUNT(*)
			FROM qst_board
				<if test="!searchType.equals('')">
					WHERE qst_type = #{searchType}
				</if>
	</select>
	<!-- 일대일 문의 디테일 조회 -->
	<select id="selectQst" resultType="com.pj2.shoecream.vo.InquiryBoardVO">
		SELECT *
			FROM qst_board
				WHERE qst_idx = #{qst_idx}
	</select>
	<select id="selectQstAns" resultType="com.pj2.shoecream.vo.InquiryBoardVO">
		SELECT *
			FROM qst_board
				WHERE qst_board_re_ref = #{qst_idx}
				AND qst_board_re_lev > 0
	</select>
	<!-- 일대일 답변 등록 -->
	<insert id="insertQstBoard">
		<selectKey keyProperty="qst_max_num" resultType="int" order="BEFORE">
			SELECT IFNULL(MAX(qst_idx), 0) FROM qst_board
		</selectKey>
		INSERT INTO qst_board
			VALUES (
				#{qst_max_num} + 1
				, #{mem_idx}
				, '슈크림'
				, #{qst_pass}
				, #{qst_subject}
				, #{qst_content}
				, #{qst_board_re_ref}
				, #{qst_board_re_lev} + 1
				, #{qst_board_re_seq} + 1 
				, now()
				, #{qst_type}
				, 'Y'
		)
	</insert>

<!--  민진 민진 민진민진민진민진민진민진민진민진민진민진 -->

	<!--  중고 상품 조회 -->
	<select id="selectProduct">
	  SELECT
	    p.product_idx,
	    p.product_brand,
	    p.product_price,
	    p.product_info,
	    p.product_date,
	    i.image1
		  FROM 
		  	jung_product AS p
		  LEFT JOIN jung_product AS j ON p.product_idx = j.product_idx
		  LEFT JOIN product_image AS i ON p.product_idx = i.product_idx
		  WHERE p.product_selector = 1
	  <if test="searchType != null and searchKeyword != null">
	    <choose>
	      <when test="searchType.equals('brand')">
	        AND p.product_brand LIKE CONCAT('%', #{searchKeyword},'%')
	      </when>
	      <when test="searchType.equals('product_info')">
	        AND p.product_info LIKE CONCAT('%', #{searchKeyword},'%')
	      </when>
	      <when test="searchType.equals('code')">
	        AND p.product_idx LIKE CONCAT('%', #{searchKeyword},'%')
	      </when>
	    </choose>
	  </if>
	  ORDER BY p.product_idx ASC
	  LIMIT #{cri.skip}, #{cri.amount}
	</select>
	
	 <select id="getTotal" resultType="int">
	SELECT COUNT(*)
		FROM board_notice
	</select>
	  
	<!--  경매 상품 조회 -->
	<select id="selectauctionmap" >
	 SELECT
	    a.auction_idx,
	    a.auction_brand,
	    COALESCE(b.bid_price, a.auc_start_price) AS bid_price,
	    a.auction_info,
	    a.auc_start_price,
	    i.image1,
	    a.auc_regist_date
			FROM 
				auction_item AS a
			LEFT JOIN product_image AS i ON a.auction_idx = i.product_idx
			LEFT JOIN (
			    SELECT auction_idx, MAX(bid_price) AS bid_price
			    FROM bid_list
			    GROUP BY auction_idx
			) AS b ON a.auction_idx = b.auction_idx
			WHERE a.auction_selector = 2
<if test="searchType != null and searchKeyword != null">
    <choose>
        <when test="searchType.equals('brand')">
            AND a.auction_brand LIKE CONCAT('%', #{searchKeyword}, '%')
        </when>
        <when test="searchType.equals('auction_title')">
            AND a.auction_info LIKE CONCAT('%', #{searchKeyword}, '%')
        </when>
        <when test="searchType.equals('code')">
            AND a.auction_idx LIKE CONCAT('%', #{searchKeyword}, '%')
        </when>
    </choose>
</if>
ORDER BY a.auction_idx ASC
LIMIT #{cri.skip}, #{cri.amount}
	</select>
<!-- 	 <select id="getTotal" resultType="int"> -->
<!-- 	SELECT COUNT(*) -->
<!-- 		FROM auction_item -->
<!-- 	</select> -->
	
<!-- 중고 상품 신고 -->
	<select id="getReportListPaging" resultType="com.pj2.shoecream.vo.ReportVO">
		SELECT report_idx, report_content, product_idx, report_div, report_detail
		FROM (
		    SELECT report_idx, report_content, product_idx, report_div, report_detail, COUNT(*) OVER (PARTITION BY product_idx) AS product_count
		    FROM joonggo_report
		) AS n1
		WHERE product_count >= 5
		<choose>
		    <when test="!searchKeyword.equals('') and searchType.equals('title')">
		        AND report_div LIKE CONCAT('%', #{searchKeyword}, '%')
		    </when>
		    <when test="!searchKeyword.equals('') and searchType.equals('content')">
		        AND report_detail LIKE CONCAT('%', #{searchKeyword}, '%')
		    </when>
		    <when test="!searchKeyword.equals('') and searchType.equals('title_content')">
		        AND report_content LIKE CONCAT('%', #{searchKeyword}, '%')
		    </when>
		</choose>
		ORDER BY report_idx ASC
		LIMIT #{cri.amount} OFFSET #{cri.skip}
	</select>
	
	<!-- 페이징 -->
	<select id="getPage" resultType="int">
		SELECT COUNT(*)
			FROM  joonggo_report
	</select>
		
		<!--  중고 신고 삭제  -->
	<delete id="deleteReport">
		  DELETE r, p
		  FROM joonggo_report r
		  JOIN jung_product p ON r.product_idx = p.product_idx
		  WHERE r.product_idx = #{product_idx}
	</delete>
	
	<!-- 경매 상품 신고  -->
	<select id="getAuctionReportListPaging" resultType="com.pj2.shoecream.vo.ReportVO">
	SELECT auction_report_idx, report_content, auction_idx, report_div, report_detail
	FROM (
	    SELECT auction_report_idx, report_content, auction_idx, report_div, report_detail, COUNT(*) OVER (PARTITION BY auction_idx) AS product_count
	    FROM auction_report
	) AS n1
	WHERE product_count >= 5
	<choose>
	    <when test="!searchKeyword.equals('') and searchType.equals('title')">
	        AND report_div LIKE CONCAT('%', #{searchKeyword}, '%')
	    </when>
	    <when test="!searchKeyword.equals('') and searchType.equals('content')">
	        AND report_detail LIKE CONCAT('%', #{searchKeyword}, '%')
	    </when>
	    <when test="!searchKeyword.equals('') and searchType.equals('title_content')">
	        AND report_content LIKE CONCAT('%', #{searchKeyword}, '%')
	    </when>
	</choose>
	ORDER BY auction_report_idx ASC
	LIMIT #{cri.amount} OFFSET #{cri.skip}
	</select>
	<!-- 페이징 -->
	 <select id="getPaging" resultType="int">
		SELECT COUNT(*)
			FROM  auction_report
	</select>
		
		<!--  경매 신고 삭제 -->
	<delete id="deleteAuctionReport">
		 DELETE a, m
		  FROM auction_report a
		  JOIN auction_item m ON a.auction_idx = m.auction_idx
		  WHERE a.auction_idx = #{auction_idx}
	</delete>
		
		<!-- 중고 상품 삭제 -->
	<delete id="deleteProduct">
		DELETE FROM jung_product
	    WHERE product_idx = #{product_idx}
	</delete>
		
		<!-- 경매 상품 삭제 -->
	<delete id="deleteAuction">
			DELETE FROM auction_item
		    WHERE auction_idx = #{auction_idx}
	</delete>
		
		<!--  중고 페이징 -->
	<select id="getproduct" resultType="int">
		SELECT COUNT(*)
			FROM  jung_product
	</select>
		
		<!--  경매 페이징 -->
	<select id="getAucpaging" resultType="int">
		SELECT COUNT(*)
			FROM  auction_item
	</select>
		
	<!--  크림 상품 목록 -->
	<select id="selectcreammap" >
			SELECT
		    c.ci_code,
		    c.ci_name,
		    c.ci_brand,
		    c.ci_model_num,
		    i.image1,
		    c.ci_state,
		    c.ci_rel_date,
		    c.ci_origin_price,
		    c.ci_color
		FROM 
		    cream_item AS c
		LEFT JOIN product_image AS i ON c.ci_code = i.product_idx
		WHERE
	<if test="searchType != null and searchKeyword != null">
	    <choose>
	        <when test="searchType.equals('brand')">
	            c.ci_brand LIKE CONCAT('%', #{searchKeyword}, '%')
	        </when>
	        <when test="searchType.equals('title')">
	            c.ci_name LIKE CONCAT('%', #{searchKeyword}, '%')
	        </when>
	        <when test="searchType.equals('code')">
	            c.ci_code LIKE CONCAT('%', #{searchKeyword}, '%')
	        </when>
	    </choose>
	</if>
	ORDER BY c.ci_code ASC
	LIMIT #{cri.skip}, #{cri.amount}
	</select> 
	<select id="getcreampaging">
		SELECT COUNT(*)
				FROM  cream_item
	</select> 
	<!--  크림 삭제 -->
		<delete id="deletecream">
		DELETE FROM cream_item
		    WHERE ci_code = #{ci_code}
	</delete>
	
		
</mapper>