<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:websocket="http://www.springframework.org/schema/websocket"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

    <task:annotation-driven/>
    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
    
    <!-- Enables the Spring MVC @Controller programming model -->
    <annotation-driven />

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
    <resources mapping="/resources/**" location="/resources/" />

    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/" />
        <beans:property name="suffix" value=".jsp" />
    </beans:bean>
    
    <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
<!--         <beans:property name="maxUploadSize" value="10485760" /> 업로드 최대 파일 크기(10MB) -->

            <!-- 업로드 최대 파일 크기(30MB) -->
          <beans:property name="maxUploadSize" value="31457280" />  
<!--           한글 파일명 인코딩 방식 -->
        <beans:property name="defaultEncoding" value="UTF-8" /> 
    </beans:bean>
    
    <beans:bean id="echoHandler" class="com.pj2.shoecream.handler.EchoHandler" />
    <websocket:handlers>
        <websocket:mapping handler="echoHandler" path="/alram" />
        <websocket:handshake-interceptors>
             <beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
          </websocket:handshake-interceptors>
        <websocket:sockjs websocket-enabled="true"/>
    </websocket:handlers>
    
    	<!-- 속성값을 외부 파일에 저장 후 사용을 위한 properties 파일 등록 -->
	<!-- webapp/resources 디렉토리가 아닌 src/main/resources 패키지 접근 시 classpath:/ 로 접근 -->
	<!-- (설정 항목 중 classpath 가 가리키는 기본 위치 : src/main/resources 패키지) -->
	<context:property-placeholder location="classpath:/config/appdata.properties"/>
	<!-- 
	각 클래스에서 지정한 properties 파일 내의 속성에 접근 시 어노테이션을 통해 접근 가능하며
	사용하고자 하는 클래스에서 멤버변수 선언 시 @Value 어노테이션을 적용
	
	< 기본 문법 >
	@Value("${속성명}")
	private 데이터타입 변수명;
	-->
    
    <!-- @Controller 를 비롯한 어노테이션을 통해 자동 주입될 클래스가 포함되는 패키지 지정 -->
    <context:component-scan base-package="com.pj2.shoecream" />
</beans:beans>